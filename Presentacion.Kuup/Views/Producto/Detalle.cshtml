@model Presentacion.Kuup.Models.ProductoModel

@{
    ViewBag.Title = "Detalle de Producto";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
    String TextoComboRequerido = "--SELECCIONE--";
}
<script src="~/Scripts/Producto/ClsProducto.js"></script>
<div class="container">
    <div class="row">
        <div class="col-sm-12">
            <h2 class="TituloPagina">DETALLE DE PRODUCTO <i class="fa fa-archive"></i></h2>
            @if (!String.IsNullOrEmpty(ViewBag.RutaDeCodigoDeBarras))
            {
                <div class="aling-center">
                    <img src="@Url.Content(ViewBag.RutaDeCodigoDeBarras)">
                </div>
            }
            <fieldset>
                <div class="from-group from-group-margin">
                    @Html.LabelFor(model => model.fFechaDeRegistro, new { @class = "col-sm-3 col-form-label" })
                    @Html.TextBoxFor(model => model.fFechaDeRegistro, "{0:yyyy-MM-dd}", new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                </div>
                <div class="from-group from-group-margin">
                    @Html.LabelFor(model => model.fCodigoDeBarras, new { @class = "col-sm-3 col-form-label" })
                    @Html.TextBoxFor(model => model.fCodigoDeBarras, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                </div>
                <div class="from-group from-group-margin">
                    @Html.LabelFor(model => model.fNombreDeProducto, new { @class = "col-sm-3 col-form-label" })
                    @Html.TextBoxFor(model => model.fNombreDeProducto, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                </div>
                <div class="from-group from-group-margin">
                    @Html.LabelFor(model => model.fDescripcion, new { @class = "col-sm-3 col-form-label" })
                    @Html.TextAreaFor(model => model.fDescripcion, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                </div>
                <div class="from-group from-group-margin">
                    @Html.LabelFor(model => model.fCantidadDeProductoTotal, new { @class = "col-sm-3 col-form-label" })
                    @Html.TextBoxFor(model => model.fCantidadDeProductoTotal, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                </div>
                <div class="from-group from-group-margin">
                    @Html.LabelFor(model => model.fPrecioUnitario, new { @class = "col-sm-3 col-form-label" })
                    @Html.TextBoxFor(model => model.fPrecioUnitario, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                </div>
                <div class="from-group from-group-margin">
                    @Html.LabelFor(model => model.fCveAviso, new { @class = "col-sm-3 col-form-label" })
                    @Html.DropDownListFor(model => model.fCveAviso, (IEnumerable<SelectListItem>)ViewBag.CveAviso, TextoComboRequerido, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                </div>
                <div class="from-group from-group-margin">
                    @Html.LabelFor(model => model.fCveCorreoSurtido, new { @class = "col-sm-3 col-form-label" })
                    @Html.DropDownListFor(model => model.fCveCorreoSurtido, (IEnumerable<SelectListItem>)ViewBag.CveCorreoSurtido, TextoComboRequerido, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                </div>
                @if (ViewBag.ManejaProveedor)
                {
                    <div class="from-group from-group-margin">
                        @Html.LabelFor(model => model.fNumeroDeProveedor, new { @class = "col-sm-3 col-form-label" })
                        @Html.DropDownListFor(model => model.fNumeroDeProveedor, (IEnumerable<SelectListItem>)ViewBag.NumeroDeProveedor, TextoComboRequerido, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                    </div>
                }
                <div class="from-group from-group-margin">
                    @Html.LabelFor(model => model.fCantidadMinima, new { @class = "col-sm-3 col-form-label" })
                    @Html.TextBoxFor(model => model.fCantidadMinima, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                </div>
                <div class="from-group from-group-margin">
                    @Html.LabelFor(model => model.fCveDeEstatus, new { @class = "col-sm-3 col-form-label" })
                    @Html.DropDownListFor(model => model.fCveDeEstatus, (IEnumerable<SelectListItem>)ViewBag.CveDeEstatus, TextoComboRequerido, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                </div>
            </fieldset>
            <br />
            <button type="button" class="btn btn-info" id="AgregarPrecioM">Agregar Precio de Mayoreo</button>
            <table id="TablaMayoreo" class="table display nowrap" cellspacing="0" width="100%">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">Orden</th>
                        <th scope="col">Cantidad Minima</th>
                        <th scope="col">Cantidad Maxima</th>
                        <th scope="col">Precio de Mayoreo</th>
                        <th></th>
                    </tr>
                </thead>
                <tfoot class="thead-dark">
                    <tr>
                        <th scope="col">Orden</th>
                        <th scope="col">Cantidad Minima</th>
                        <th scope="col">Cantidad Maxima</th>
                        <th scope="col">Precio de Mayoreo</th>
                        <th></th>
                    </tr>
                </tfoot>
            </table>
            <button type="button" class="btn btn-primary" id="GuardaPrecioM">Guarda Precio de Mayoreo</button>
            <br />
            <hr class="my-4">
            @Html.ActionLink("Regresar a la Consulta", "Index", "Producto", null, new { @class = "btn btn-secondary" })
            @Html.ActionLink("Edita", "Edita", "Producto", new { Model.NumeroDeProducto, Model.CodigoDeBarras }, new { @class = "btn btn-info" })
            @Html.ActionLink("Alta", "Alta", "Producto", null, new { @class = "btn btn-primary" })
            <br />
            <br />
            <br />
        </div>
    </div>
</div>
<div id="AgregaPrecioMayoreo" class="Oculto">
    <fieldset>
        <div class="from-group row from-group-margin">
            <label from="fCantidadMinimaM" class="col-sm-5 col-form-label">Cantidad a Minima</label>
            <div class="col-sm-7">
                <input type="text" class="form-control" id="fCantidadMinimaM" />
            </div>
        </div>
        <div class="from-group row from-group-margin">
            <label from="fCantidadMaxima" class="col-sm-5 col-form-label">Cantidad a Maxima</label>
            <div class="col-sm-7">
                <input type="text" class="form-control" id="fCantidadMaxima" />
            </div>
        </div>
        <div class="from-group row from-group-margin">
            <label from="fPrecioDeMayoreo" class="col-sm-5 col-form-label">Precio de Mayoreo</label>
            <div class="col-sm-7">
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <span class="input-group-text">$</span>
                    </div>
                    <input type="text" class="form-control" id="fPrecioDeMayoreo"/>
                </div>
            </div>
        </div>
    </fieldset>
</div>
<script type="text/javascript">
    let ClsProducto;
    $(function () {
        ClsProducto = Objeto.Constructor({
            Funcionalidad: 'DETALLE',
            AplicarPrecioDeMayoreo: '@ViewBag.AplicarPrecioDeMayoreo',
            UrlGuardaTablaMayoreo: '@Url.Action("GuardaMayoreo","Producto")',
            NumeroDeProductoModel: '@Model.NumeroDeProducto',
            CodigoDeBarrasModel: '@Model.CodigoDeBarras',
            UrlCargaMayoreo: '@Url.Action("CargaMayoreo","Producto")'
        });
        ClsProducto.Inicio();
    });
</script>
